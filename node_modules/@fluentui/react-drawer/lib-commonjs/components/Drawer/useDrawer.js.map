{"version":3,"sources":["useDrawer.ts"],"sourcesContent":["import * as React from 'react';\nimport { slot } from '@fluentui/react-utilities';\n\nimport type { DrawerProps, DrawerState } from './Drawer.types';\nimport { OverlayDrawer } from '../OverlayDrawer';\nimport { InlineDrawer } from '../InlineDrawer';\n\n/**\n * Create the state required to render Drawer.\n *\n * The returned state can be modified with hooks such as useDrawerStyles_unstable,\n * before being passed to renderDrawer_unstable.\n *\n * @param props - props from this instance of Drawer\n * @param ref - reference to root HTMLElement of Drawer\n */\nexport const useDrawer_unstable = (props: DrawerProps, ref: React.Ref<HTMLElement>): DrawerState => {\n  const elementType = props.type === 'inline' ? InlineDrawer : OverlayDrawer;\n\n  return {\n    components: {\n      root: elementType,\n    },\n\n    root: slot.always(\n      {\n        ref,\n        ...props,\n      },\n      {\n        elementType,\n      },\n    ),\n  };\n};\n"],"names":["useDrawer_unstable","props","ref","elementType","type","InlineDrawer","OverlayDrawer","components","root","slot","always"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAgBaA;;;eAAAA;;;;iEAhBU;gCACF;+BAGS;8BACD;AAWtB,MAAMA,qBAAqB,CAACC,OAAoBC;IACrD,MAAMC,cAAcF,MAAMG,IAAI,KAAK,WAAWC,0BAAAA,GAAeC,4BAAAA;IAE7D,OAAO;QACLC,YAAY;YACVC,MAAML;QACR;QAEAK,MAAMC,oBAAAA,CAAKC,MAAM,CACf;YACER;YACA,GAAGD,KAAK;QACV,GACA;YACEE;QACF;IAEJ;AACF"}